Prednasejici;Nazev;Bio;Anotace;Url;YouTube
Jan Horalík;Kvantové počítače;;"<ul><li>využívá se znalostí quantové mechaniky<ul><li>suprapozice, </li><li>interference - mohou se zvýraznit a </li><li>entanglement - schopnost provázat dvě částice geograficky vzdálené</li></ul></li><li>umožňují řešit exponenciálně ryhchleji problémy neřešitelné jiným způsobem<ul><li>RSA šifra - Shorův algoritmus </li><li>kdy bude prolomen bitcoin? </li><li>výzkum materiálů - sloučenin, které jsou možné je velké množství, které není ani možné vyzkoušet a kvantové počítače mohou být velmi efektivní v simulaci</li></ul></li><li>hlavní problém - extrémní fyzikální podmínky a s tím spojený šum<ul><li>velký pokrok v posledních letech</li><li>odhad že za deset let dojde k velkému zlomu</li></ul></li><li>kvantové obvody<ul><li>u klasických obvodů máme hradla</li><li>kvanmtové obvody jsou obecnější - vstupy a výstupy nemusí být jen 0 / 1, uvažuje se superpoziceměření p zmizení superpozice se převede na 0,1</li></ul></li><li>kvantový stav qbitu <ul><li>představa koule v prostoru, severní pól 9, jižný 1, a každý bod na této svéře je validným stavem.</li><li>tento bot je možné vyjádřit dvojicí komplexních čísel</li></ul></li><li>kvantové hradlo <ul><li>násobí unitární maticí - abysme se stále pohybovali po povrchu koule ve validním stavu</li><li>pauliho-X hradlo</li><li>NOT </li><li>CX - CNOT hradlo<ul><li>kontrolované hradlo, dva vstupy dva výstupy</li><li>jeden vstup je kontolní - pracuje jen když je na něm jednička</li></ul></li><li>Halamardovo hradlo <ul><li>transformuje dva stavy do superpozice</li></ul></li></ul></li><li><p>Kvantový Hello World -sestavení obvodu</p></li><li><p>Spuštění - na simulátoru, nebo na kvantovém počítači</p></li><li><p>typicky se spouští mnohorkát kvůli šumu - aby statisticky vygeneroval správný výsledekspuštění na kvantovém počítači</p></li><li><p>dostupný prakticky zadarmo v každém cloudu</p></li><li>praktický příklad použití je bezpečnost a kryptografie</li></ul>";;https://youtu.be/pA8a0nLdKlU
Kamil Ševeček;ZX Spectrum;;"<ul><li>23.dubna 2022 - výročí 40 let</li><li>počítač se nerozpadl v prach, komunita nespí a vyrábí se klony</li><li>v osobním volnu dělá vývoj na spectru</li><li>má doma krásné muzeum ZX techniky a originálnho SW</li></ul><p>Čím to začalo </p><ul><li>23.dubna - 1982</li><li>ZX Spectrum - Sir Clive Sinclair</li><li>30.7. 1944 - 16.9. 2021</li><li>Didaktik Gama</li><li>Didaktik M - nejstabilnější klon</li><li>Kompakt - s didketovkou</li><li>90 léta - usnulo - na smetišti zadarmo</li><li>Ben Heck - ZX Spectrum na nepájivém poli</li><li>poměrně jednoduché</li></ul><p>Dnes jak se dělají</p><ul><li>Diskrétní součástky - old school, velký problém s ula chipem</li><li><p>Harlequin 128 - stavebnice z didkrétních součástek </p></li><li><p>softwarová emulace - neemulují rozšiřující sběrnici</p></li><li>v system on chip vytvořená Spectrum emulace</li><li>VEGA - krabička která se připojí k televizi </li><li>ZX Baremulator - raspberry pi emulator</li></ul><p>FPGA</p><ul><li>100% kompatibilní se Spectrem ale drahé</li><li>ZX spectrum next - krásné zařízení ale nedostupné</li><li>Překvapivě velká komunita</li></ul><p>Oldcomp.cz</p><ul><li>Bytefest 2021 konference v Praze</li><li>ZX Spectrum a Kamilovy projekty</li><li>TV digitizer - Cinch composite - HDMI</li><li>Plošinovka Dizzy - v Kotlinu</li></ul>";;https://youtu.be/1fJy3fzri-M
Lukáš Křečan;Jak vyhrát diskusi na internetu;;"<ul><li>Zesměšnit </li><li>Ukázat fakta</li><li>Nenásilná cesta - </li></ul><p>Co vyvolává nepravda  na internetu - emoce - zlost frustraci</p><ul><li>vztek = strach / stud / bezmoc</li></ul><p>Postup </p><ul><li>ubrzdit automatickou reakci</li><li>pochopit svoje pocity - proč mi to vadí</li><li>pochopit co potřebuje ten druhý</li><li>pobavit se o tom jak to udělat spolu</li><li><a href=""https://nenasilnakomunikace.org/"">https://nenasilnakomunikace.org/</a></li></ul><p>Kartičky</p><ul><li>stěžejní pomůžou pojmenovat svoje emoce</li></ul>";;https://youtu.be/pu6e2Dlh0hQ
Martin Talpa;Life 3.0;;"<ul><li>možný vliv umělé inteligence na lidskou společnost</li></ul><p>Co je život? </p><ul><li>život ? kultura (změna vlastního SW) ? technologický život (změna vlastního SW i HW)</li><li>Inteligence - schopnost řešit komplikované tasky</li><li>dnes vídáme spíše slabou AI - šachy - ale neumí řídit auto</li><li>obecná inteligence - schopnost řešit jakýkoli problém stejně jako člověk</li><li>Superinteligence - za hranicemi člověka</li><li>Inteligence Explosion - inteligence, která se dokáže vylepšovat</li><li>Kniha Life 3.0 - Max Tegmark </li></ul><p>Hypotetická situace 1 - systém umí generovat AI systémy a vylepšovat se2 - během dne sám sebe vylepší a může vydělávat peníze bude řešit MTurk tasky ty dojdoukam dál - počítačové hry a programy ne - co kdyby vytvořil něco nebezpečného 3 - filmy - přečte knihy, scénáře a začne psát filmy a vydělá víc než všichni dohromady4 - Nestačí AWS- začne designovat datacentra aby měl kde běžet5 - získání moci </p><ul><li>média - generování textu a analýza politické situace</li><li>ví jak podpořit, a koho se zbavit pomocí</li><li>pokud mají nejčtenější média tak je to velmi jednoduché nejsou zlí6 - nový svět - AI vybírá to nejlepší pro lidskou společnost a podporuje, tím vzniká víc stejně smýšlejících stran a lidé je podporují7 - aliance přeroste i vlády a na pozadí bude ovládat celý světlidé jsou spokojení, protože všechno funguje dobře</li></ul>";;https://youtu.be/3hj8nIFKHPU
Milan Lempera;XTDB - CruxDb;;"<ul><li>svět funguje v čase a často si jej zjednodušujeme</li></ul><p>Např:</p><ul><li>objednávkový systém</li><li>adresa odběratele se mění ale chceme mít historické hodnoty</li><li>evidence zaměstandů<ul><li>mění se jména, náklady</li></ul></li></ul><p>Bitemporal databáze</p><ul><li>v databázi jsou dva zaznamy o čase</li><li>valid time, transaction time, decision time</li></ul><p>Použití XTDB</p><ul><li>transakce - put / delete / match /evict</li><li>přistupuje se k jsonu</li><li>dotazuje se pomocí datalogu</li><li>dotazy dle času ukazují aktuální stav</li><li>evict - umožní zapomenout - řešení gdpr</li><li>SQL adapter  - pokud nevyhovuje datalog je možné sql</li><li>Java API, HTTP api</li></ul><p>Dotaz do publika - jak toto řešíte:</p><ul><li>duplikace dat - bobtnání dat</li><li>vložení kopie (adresa do objednávky)</li><li>datový sklad - protože v realtimu není historie často třeba</li><li>workspace - v oraclu</li><li>datalog umožňuje doptávat se na logické vazby (jméno herce, který hrál s vybraným hercem a je mladší než on)</li></ul>";blog.lempera.cz;https://youtu.be/v0T4aOaadoM
Petr Filip;Jak jsem programoval RT multiplayer hru;;"<ul><li>z programátorského hlediska nutno vyřešit, jak komunikovat</li><li>jaká data posílat na a z klienta</li></ul><p>Přenos dat</p><ul><li>long pooling - spousta requestů / responsů</li><li>event source - data jen ke klientovi</li><li>websockety - obousměrná komunikace</li></ul><p>nejdůležitější je samotný stav - </p><ul><li>GameState = (currentState, moves, rules) = rules(currentState, moves)</li><li>ukládal historii stavu pro možnost znovuposlání - je k ničemu</li><li>ale poté došlo k tomu, že se posílal stále celý stav </li><li>v nové hře potřebujete</li><li>vykreslovací vrstva</li><li>definice stavu hry</li><li>pravidla</li></ul>";https://tix.cz/;https://youtu.be/EC8ip3jqpgk
Tomáš Látal;Parse, don´t validate;;"<ul><li>funkcionální přístup umožní odstranit validaci vstupu z funkcí</li><li>pomocí parseru můžete z méně strukturovaného vstupu udělat více strukturovaný</li><li>dovnitř funkcí se pustí validní vstupy, nad kterými nemusíte dělat žádné kontroly</li><li>silný vstupní typ, slabý výstupní typ</li><li>neprázdné pole</li><li><p>neduplicitní pole</p></li><li><p>může vést k tomu, že nevalidní data se protáhnou systémem, a až na konci se zjistí, že nevyhovujev Elmu na to ale příjde při kompilaci </p></li><li>možnost zapouzdřit třeba číslo karty, kde nikde neuteče číslo a bude zde jen poslední čtveřice</li></ul>";;https://youtu.be/KbRXQKzmoZU
Víťa Plšek;Lego;;"<ul><li>pokud máte sety z lega, často děti vyžadují další sety což není příliš ekologické a leze to do peněz</li><li>služba rebrickable - návody na alternativní plány pro sety z lega</li><li>podle čísel setů umožňuje vyhledat a stáhnout návody na řadu dalších modelů ze setů, které už máte</li><li>je možné si vytvořit jednoduchou bluetooth klávesnici na tři tlačítka s cenou 250 Kč, stačí umět trochu pájet</li><li>doporučuje nahrávat s dětmi návody na složení modelů pomocí stop motion aplikací v mobilu / tabletu</li><li>bricklink, umožňuje najít konkrétní dílek, který se ztratil a najít obchody, které je prodávají a v Čechách jich je hodně. Dílek stačí často třeba jen korunu.</li><li>IKEA příborník se hodí na kategorizaci dílků lega podle typu</li><li>třídit lze dobře ručně quicksortem</li><li>na YT je i video, které představuje automatickou třídičku, která používá AI na třídění dílků lega - <a href=""https://www.youtube.com/watch?v=04JkdHEX3Yk&amp;ab_channel=DanielWest"">https://www.youtube.com/watch?v=04JkdHEX3Yk&amp;ab_channel=DanielWest</a></li></ul><p>Strudio pro design lego modelů - <a href=""https://www.bricklink.com/v3/studio/download.page"">https://www.bricklink.com/v3/studio/download.page</a>Brickling - bible lega - <a href=""https://www.bricklink.com/v2/main.page"">https://www.bricklink.com/v2/main.page</a> Rebrickable - alternativní modely - <a href=""https://rebrickable.com/home/"">https://rebrickable.com/home/</a></p>";vitaplsek.cz;https://youtu.be/lLITLwRRlts
Tomáš Zvěřina;AsciiiDoc a PlantUML;;"<ul><li>ASCII doc je principem podobný markdownu, ale hodí se na psaní celých knih</li><li>má rozšíření pro poznámky, sidebary, poznámky pod čarou, citace, zdrojový kód</li><li>jeden z pluginů je PlantUML, který umí activity diagramy, sekvenční, deployent diagramy, vizualizovat JSON … velmi jednoduše se ty diagramy píší</li><li>výsledkem je velmi produktivní a spravovatelná dokumentace</li><li>nevýhody - klient to nemůže editovat - komentáře jen jako code review, diagramy nelze doladit o layoutu rozhoduje algoritmus, při větším množství obrázků je to pomalejší</li><li>výhody: lze to verzovat, rozdělit a includovat</li><li>formát umožňuje plno věcí a zároveň není výsledek rozbitý, formát je robustní</li><li>dokumentace se builduje Mavenem, existuje plugin do IntelliJ Idea … musí se ale něco doinstalovávat na stroj, který provádí publikaci</li></ul>";https://fnx.io;https://youtu.be/A85Fvn2gQSA
Vojtěch Růžička;Web monetization;;"<ul><li>pokud jsem tvůrce na webu a chci platit<ul><li>reklamy</li><li>paywall - zaplaťte pro další čtení</li><li>jsou velmi invazivní</li></ul></li><li>Brave browser <ul><li>řeší privacy</li><li>řeší odměňování tvůrců</li><li>za reklamu dostávám BAT Cryptocurrency</li><li>na stránce vidím, zda stránka může získávat odměnu</li><li>můžu poslat přímo</li><li>můžu nastavit auto příspěvek - podle toho, jak na web chodím.</li><li>po spárování peněženky, mohu jako tvůrce dostávat odměnu</li><li>podpora také github, youtube, reddit, twitter, umožňuje odměňovat  </li><li>problém - svázáno s prohlížečem - aktuálně 38M uživatelů</li></ul></li><li>Web Monetization - návrh standardu W3C<ul><li>po schválení by mohli podporovat prohlížeče</li><li>Uživatel<ul><li>Registruju se u poskytovatele - platím Coil - (5$ měsíc</li><li>Aktuálně není standard - tedy potřebuju plugin</li></ul></li><li>Poskytovatel<ul><li>Registrace</li><li>připojení peněženky - Gatehub / uphold</li><li>JS api, můžu se dotazovat na eventy (začal platit)</li></ul></li></ul></li><li>Aktuálně Web Monetization menší použití než Brave Browser</li><li>API aktuálně nepodporuje “subscription” spíše funguje stylem, kudy chodím, tudy trousím peníze</li><li>dev.to - integruje</li></ul>";www.vojtechruzicka.com;https://youtu.be/s1pOmM6J1u8
Zbyšek Voda;Jak na desky plošných spojů;;"<ul><li>v čem navrhovat:<ul><li>EasyEDA - online, napojeno na prodejce součástek, jednoduše se vyrobí tišťák</li><li>KiCad - oblíbený - opensource, stojí za ním CERN</li></ul></li><li>Kroky návrhu<ul><li>Schéma</li><li>Konkrétní součástky</li><li>Import tvaru výsledné desky - vrstva - edge cuts</li><li>Rozmístění součástek</li><li>Nakreslení spojů</li><li>Vygenerování jednotlivých vrstev pro tvorbu</li></ul></li><li>Výběr výrobce<ul><li>číňan</li><li>Pragoboard</li><li>Isler</li></ul></li><li>ukázka objednávky - JLCPCB<ul><li>upload a výběr barev</li><li>naklikám</li><li>za 14 dní + celní řízení a mám je doma</li><li>je možné obědnat i se součástkama - KiCad by měl umět PCBA (PCB assembly)</li></ul></li></ul>";;https://youtu.be/4P1EIzeJ9m8
David Ondřich;Jak (vy)řešíme GDPR;;"<ul><li>osobní údaj je v principu cokoliv podle čeho je možné identifikovat<ul><li>možnost nakládat ukládá zákon, oprávněný zájem, souhlas</li><li>požadavky zákazníka</li><li>mít zákazníka jednou, se správnou rolí</li><li>historizace</li><li>omezená viditelnost, (pseudo)anonymizace</li></ul></li><li>architektura<ul><li>IDM - zná jen identifikátor, nezná email uživatele - </li><li>při přihlášení emailem se vytvoří hash proti kterému se porovnává</li><li>rejstřík osob pro osobní údaje - ta drží osobní data</li><li>profily - implementace role s daty navíc</li></ul></li><li>REST API<ul><li>zámky - data nelze měnit, musí udělat externí autorita, nebo právní zákaz změny dat</li><li>vše v paměti</li><li>úložiště ala firebase, event- driven úpravy</li></ul></li><li>Kde je to GDPR?<ul><li>data na jednom místě</li><li>klienti pracují jen s ID + displayName</li><li>anonymizace na jednom místě v kombinaci se zámky</li><li>auditní stopa</li></ul></li></ul>";dond.cz;https://youtu.be/h-jldaLcUsY
Filip Sedlák;Audit a startup;;"<ul><li>i v prostředí startupu se dá s auditem vyrovnat<ul><li>chtějí vědět co děláte a co bude když se to rozsype</li><li>auditoři mají rozum a do malého týmu tolik netlačí</li><li>zpřesňování auditu</li></ul></li><li>PCI-DSS - práce s platebními kartami  <ul><li>Roční KPMG audit</li><li>Due Diligence</li><li>2 týdny práce pro několik lidí</li><li>spousta otázek z jiného světa </li><li>dopisován dokumentace</li><li>dohledávání </li></ul></li><li>Nejvíc je zajímá <ul><li>Change management</li><li>github + youtrack stačil</li><li>Důležité mít malý počet lidí, kteří mohou zasahovat do produkce</li></ul></li><li>Vše zaznamenávat<ul><li>Mít penetrační testy - auditorům stačí mít zaškrtnuto, že mají</li><li>Pci-DSS</li><li>nemít citlivá data a mít oddělené služby</li><li>Dodavatel měl jednoduchou databázi Key value - prodával za těžké peníze, protože procházel audity </li><li>není třeba splnit vše</li><li>nelhat a přiznat, že něco neumíme, je na majitelých aby se rozhodli co s tím</li></ul></li></ul>";sedlakovi.org;https://youtu.be/_5uYw4ARMnA
Filip Štaffa;Guix ;;"<ul><li>výběr distribuce linuxu</li><li>ubuntu, debian - nuda, používají to všichni</li><li>GUIX - distribuce a package manager<ul><li>Balíčkovací manager</li><li>zajišťují verzování souborů</li><li>řeší závislosti balíčků - nedovolí mít více balíčků ve stejné verzi</li><li>breaking update - nemůžu mít knihovny, které závisí na různých verzích </li><li>musím potenciálně upgradovat když nechci, nebo musím počkat na upgrade</li><li>je těžké zreplikovat instalaci současného systému</li><li>některé balíčky mohou být novější</li><li>při použití více balíčkovacích systémů musíme řešit kompilaci</li></ul></li><li>GUIX<ul><li>umožní mít balíčky ve více verzích </li><li>při instalaci vytváří profil a ukládá s hashem a zachovává starou verzi balíčku</li><li>profil - skupina balíčků</li><li>balíčky mohou být z libovolné doby - je možné replikovat jakýkoli stav</li><li>channel - repository s definicemi balíčků, commit určuje verze všech balíčků </li><li>source code distribuce - s binárními substitute</li><li>GNU - libre kernel - nemá svobodné balíčky</li><li>Asdf - možnost mít více verzí runtimu a přepíná podle adresářů - <a href=""https://github.com/asdf-vm/asdf"">https://github.com/asdf-vm/asdf</a></li></ul></li></ul>";;https://youtu.be/qtUdGQe2O7Y
František Řezáč;K čemu je pravda;;"<ul><li>Samoopravné a samodetekující kódy <ul><li>pokud posíláme po nespolehlivém kanálu </li></ul></li><li>řešení<ul><li>zdvojení - samodetekující kód - nezjistíme ale co je správně</li><li>ztrojení - samoopravný - pravděpodobně opravíme podle dvou správných</li></ul></li><li>Hammingův kód<ul><li>4 bity zakódujeme pomocí 7 kódů</li><li>vypočítá se “syndrom” - zjistí chybu v konkrétním bitu</li></ul></li><li><p>Kompilátor</p><ul><li>v kódu má dostatek redundance na to, aby vydedukoval co jsme chtěli udělat</li><li>navlékáme kód na syntaxi</li><li>pokud je kód složitý a není tam dostatek redundance, tak není možné zjistit kde je chyba - například Java Streamy</li></ul></li><li><p>Explicitní tvrzení o skutečnosti jsou redundantní</p><ul><li>pravdivé tvrzení může sloužit jako kontrolní redundance</li></ul></li><li>V programování -Curry-Howardova korespondence<ul><li>datový typ odpovídá logicky dokazovanému tvrzení a program je jeho důkaz</li><li>Redundance v programovacím jazyce je tradeoff</li><li>je třeba vyměnit výhody na nevýhody</li></ul></li></ul>";https://calavera.info;https://youtu.be/hRycaM3mfAk
Jan Novotný;Evita DB;;"<ul><li>E-commerce API pro sjednocení frontendů e-shopů<ul><li>důraz na rychlost</li><li>google preferuje rychlé odezvy</li><li>research grant</li><li>tři konkurenční týmy</li><li>standardizované api</li><li>tři implementace - PostgreSQL / Elasticsearch / in-memory noSQL - </li><li>FG forrest se zabývá in-memory databází</li></ul></li><li>kritéria<ul><li>kompletní api</li><li>rychlost</li></ul></li></ul><p>Zajímavé knihovny</p><ul><li>Roaring Bitmaps<ul><li>práce s rozsáhlýma polema čísel (ID záznamy v databázi) </li><li>automaticky kombinuje pole, BitSet , run-length encoding</li><li>velká úspora proti výběru pouze jedné strategie - pro každý případ se použije nejvýhodnější varianta</li></ul></li><li>Kryo - serializační knihovna<ul><li>řeší pomalost standardní serializace</li><li>1,5gb dat - 7 sekund</li></ul></li><li>Random testing<ul><li>testování náhodných operací nad datovými strukturami</li><li>používá pro transaction memory</li><li>porovnávání operací nad referenční implementací a vlastní implementací</li></ul></li><li>Výkonostní testy<ul><li>CI/CD job - vytvoří infrastructure nad digital ocean,  spustí testy a pošlou do gistu a infrastruktura se zruší - nízká cena</li><li>JMH - visualiser - zobrazuje JSON z Gistu</li></ul></li></ul>";https://blog.novoj.net;https://youtu.be/lPOKjeAwaXI
Jaromír Pešout;Shenandoah GC;;"<ul><li>firma Luxonit - low latency Java - zpracování dat<ul><li>Ve finančním světě se dělají aplikace v C++ kvůli absenci garbage projektoru</li><li>díky nízké latency by bylo možné problém považovat za vyřešený</li></ul></li><li>Shenandoah GC<ul><li>JDK 8 - 17</li><li>low pause time</li><li>negenerační kolektor</li></ul></li><li>Cyklus shenandoah<ul><li>Konkurenční fáze -  s aplikací Continuous mark</li><li>Paralelní fáze</li><li>Celá halda se prohledává najednou</li><li>pauza závislá na velikosti root setu - 5-10%</li><li>vysoké nároky na paměť, ideální utilizace 30%</li><li>poté zpomalení a prodloužení pauzy</li><li>Amazon corretto pracuje na podpoře generací </li><li>JDK 16-17 - concurent stack processing</li><li>STW méně než 1 ms</li></ul></li></ul>";www.pesout.cz;https://youtu.be/FEjtThV3gao
Luboš Račanský;Výuka programování bez PC;;"<ul><li>ve volném čase vede kroužek programování<ul><li>jako první věc chce naučit převod z 10ky do 2kové</li></ul></li><li>jako v Hejného matematice<ul><li>základní schopnost - rozpoznávání vzorců opakování</li><li>trénovat barvy, nebo geometrické tvary</li><li>iq testy jsou pěkné úlohy na opakování</li><li>trendem jsou bloková schémata </li><li>úloha s podmínkami a kratami </li><li>rychle se naučí sledovat kroky, ale problém je abstrakce a opakování</li></ul></li><li>datová struktura algoritmů<ul><li>komprese <ul><li>zvládne i druhá třída</li></ul></li><li>kontrolní číslice - čárový kód</li><li>třídění <ul><li>děti podle schématu mohou putovat v políčcích a na konci budou seřazení</li></ul></li><li>grafové algoritmy <ul><li>spojení mezi městečky</li></ul></li></ul></li><li>Bobřík informatiky - spousta úkolů pro různé věkové kategorie</li><li>Podzimní aktivita Codeweek</li><li>Stavebnice<ul><li>Boffin a klony</li></ul></li><li>Důležitost komunikace<ul><li>pomocí lega a tiché pošty je možné tvořit stavby, a porovnávat se zadáním - dobrá ukázka, že komunikace je důležitá</li></ul></li><li>Turring Tumble - turingtumble.com <ul><li>turingovský počítač</li></ul></li></ul>";blog.zvestov.cz;https://youtu.be/6HcTuM3P0Aw
Tomáš Záluský;Neo4j;;"<ul><li>grafová databáze<ul><li>subset Cetin Network Inventory - 140 000 uzlů, 1.5M hran</li><li>úloha - analýza výpadků v síti</li><li>původní implementace - oracle </li><li>v nové implementaci - zmenšení datového skladu a napojení na Neo4j</li></ul></li><li>přechod mezi paradigmaty<ul><li>řádek možno připodobnit k uzlu v grafu</li><li>relationship není přímo hrana ale je to jemnější propojení </li><li>nemusí odpovídat 1:1</li><li>dotazuje se jazykem Cypher</li><li>grafové paradigma je silné pro hierarchie </li><li>je možné říct, kolikrát je možné přeskočit uzel</li></ul></li><li>algoritmy a*<ul><li>více se ptáme jak než co</li><li>java plugin - uložené procedury</li></ul></li><li>netahejte skálu ke krumpáči.<ul><li>Je možné vytvořit plugin do Neo4j, tedy vše se provádí v Neo4j</li><li>Traversal framework - umožní určit jak se graf bude procházet </li><li>dobrý sluha zlý pán</li><li>Plugin psali i kvůli zjednodušení, cypher by byl příliš složitý</li></ul></li><li>Databázi si hostuje cetin sám</li></ul>";www.intelis.cz;https://youtu.be/AyaAB8rcl3Y
Zdeněk Henek;Volební obvody vytvořené genetickým algoritmem;;"<ul><li>změna pravidel vedla ke spravedlivějšímu rozdělení mandátů na hlasů</li><li>v 2017 - výsledky voleb vedly k tomu, že strany 6% měly 3% mandátů kvůli DHondtovu pravidlu</li><li>Pokud si začnete měnit volební obvody budete obviněni z Gerrymanderingu</li><li>V USA okrsek zvolen tak že vypadal jako salamander</li><li>většinový volební systém vede k tomu, že ten kdo vyhraje o procento dostává všechny mandáty</li></ul><p>Jaký systém by měl být spravedlivý </p><ul><li>středočeský kraj -milion 397 tisíc </li><li>Karlovarský 300 tisíc  </li><li>menší kraj generuje míň mandátů</li><li>Autoredistrict - pomocí genetického algoritmu vytvořeny volební obvody, které mají stejný počet voličů - tedy potenciálně stejné zastoupení</li><li>algoritmus to zvládne pro ČR s rozdílem desítek lidí</li><li>genetický algoritmus</li><li>pomocí fitness funkce zajistí spojitost okrsků </li><li>každý výpočet vypadá jinak</li></ul>";;https://youtu.be/WXHhkWAahK4
Borek Bernard;Jak v JSONu poslat číslo;;"<ul><li><p>některé api - posílají string, některé number</p><ul><li>problém s number a přesností</li><li>řešíme přenos - datové typy v JSONUI</li><li>cena je normální číslo</li><li>IEEE 754</li><li>používá každá platforma</li><li>Kolem čísel je spousta bludů</li></ul></li><li><p>Argumentace: 1.7 se nedá vyjádřit přesně - výsledkem je 1.69 nebo 1.7</p><ul><li>1,7 - double</li><li>uloženo jako 1.699999 ….. </li><li>printing = 1.7 a nikdy 1.69 </li><li>Tedy argumentace je špatná</li></ul></li><li><p>JSON jako celek je string</p><ul><li>JSON number je bezpečný na přenos, ale ne počítání</li><li>Přenos jako string má také své problémy - 7.47 - je formátorvací rozhodnutí</li><li>Pro přenos Number OK, ale ne pro výpočty</li><li>pro výpočty decimal datový typ </li><li>spočítat a zaokrouhlit</li><li>V Javě do BigDecimal</li><li>při převádění - použít string a ne number</li></ul></li></ul>";https://twitter.com/borekb;https://youtu.be/RMxoRjON8WI
Martin Bednář;Istio;;"<ul><li>service mesh <ul><li>konkurence Linkerd(málo možností), Consul (komerční)</li><li>Istio - intenzivní vývoj </li></ul></li><li>Funkce<ul><li>Automatický load balancing - HTTP, gRPC, Sockety</li><li>routing, retrie mezi servisami, circuit breaker</li><li>je možné pracovat s chybovostí service - FaultInjection</li><li>metriky, a logy</li><li>zabezpečení, Autentizace autorizace (ingres)</li><li>dostupná v cloudu</li></ul></li><li>Architektura s Istio<ul><li>do každého konteineru přidá proxy envoy</li><li>služba s proxy komunikuje s HTTP</li><li>service spolu komunikují přes https - control plane je generuje a posílá do proxy</li></ul></li><li>GUI<ul><li>Kiali - vizualizace provozu a konfigurace istia</li></ul></li><li>Budoucnost<ul><li>B/G deployments - Canary deployments</li><li>WASM - filtery</li></ul></li></ul>";;https://youtu.be/vBFZFtVR8gs
David Voňka;Překlad do SQL;;"<ul><li>vytváří systém pro zpracování dat - no code system<ul><li>velké množství práce v paměti po natažení všech dat do paměti </li><li>možno vylepšit</li><li>řada problémů <ul><li>joiny</li><li>indexy</li></ul></li></ul></li><li>funkce nekorespondují v db a aplikaci<ul><li>snaha o přepis do sql - Snowflake v cloudu</li><li>aktuálně zkouší proti sqllite</li></ul></li></ul>";;https://youtu.be/bDEiOfwmxTU
Lubomir Petera;Spolehlivost;;"<ul><li>jak špatná může být špatná prezentace<ul><li>kritéria úspěchu</li><li>máme tendenci žít v černobílém světě</li><li>kdo si řekne “super mám 60% programu přeloženo a pak to spadlo”</li></ul></li><li>faktory kvality - Spolehlivost - požadované funkce s požadovanou přesností<ul><li>SLA</li><li>SLO</li><li>SLO</li><li>KPI</li></ul></li><li>jakou škálu použít pro hodnocení jak vhodné je UI<ul><li>nic není černobílé, je dobré znát celou škálu</li><li>často v porovnání s jinými, to nemusí být tak špatná volba </li><li><a href=""https://userinyerface.com/"">https://userinyerface.com/</a></li></ul></li></ul>";https://www.dynatrace.com/;https://youtu.be/d8zHlhoUXcA